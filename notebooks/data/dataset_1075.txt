Name: Datatrieve
Tags: mythbusting_1, study_1, study_123, study_15, study_20, study_41, study_52, study_7, study_88

Source: Unknown - Date unknown

Please cite: This is a PROMISE Software Engineering Repository data set made publicly available to encourage repeatable, verifiable, refutable, and/or improvable predictive models of software engineering. If you publish material based on PROMISE data sets, please follow the acknowledgment guidelines posted on the PROMISE repository web page.

Title/Topic: The transition of the DATATRIEVE product from version 6.0 to version 6.1

Sources:
- Creators: DATATRIEVE project carried out at Digital Engineering Italy
- Donor: [Redacted]
- Date: January 15, 2005

Past usage: A hybrid approach to analyze empirical software engineering data and its application to predict module fault proneness in maintenance
Source: Journal of Systems and Software archive
Volume: 53, Issue 3 (September 2000)
Pages: 225 - 237
Year of Publication: 2000
ISSN: 0164-1212

Relevant information: The DATATRIEVE product was undergoing both adaptive and corrective maintenance at the Gallarate (Italy) site of Digital Engineering. It was being transferred from platform OpenVMS/VAX to platform OpenVMS/Alpha, and failures reported from customers were being fixed. The product was originally developed in the BLISS language, an expression language that is block structured, with exception handling facilities, coroutines, and a macro system. It was one of the first non assembly languages for operating system implementation. Some parts were later added or rewritten in the C language. The overall structure of DATATRIEVE is composed of C functions and BLISS subroutines. The empirical study of this data set reports only the BLISS part, which is by far the larger one. In this context, "module" refers to a BLISS module, i.e., a set of declarations and subroutines usually belonging to one file. More than 100 BLISS modules have been studied. It was important to the DATATRIEVE team to better understand how the characteristics of the modules and transition process were correlated with code quality. The objective of the data analysis was to study whether it was possible to classify modules as non faulty or faulty, based on a set of measures collected on the project.

Number of records: 130
Number of attributes: 9 (8 condition attributes, 1 decision attribute)

Attribute Information:
- Lines of code of module in version 6.0
- Lines of code of module in version 6.1
- Number of lines of code added to module in version 6.1
- Number of lines of code deleted from module in version 6.0
- Number of different blocks module between versions 6.0 and 6.1
- Rate of modification of module
- Subjective variable expressing project team's knowledge on module (low or high)
- Number of lines of code of module in version 6.0 reused in version 6.1
- Faulty status (0 for modules with no faults, 1 for other modules)

Missing attributes: none

Class Distribution:
Non faulty: 91.54%
Faulty: 8.46%

Keywords: software engineering, DATATRIEVE, maintenance, fault prediction, BLISS language, module analysis, code quality, empirical study