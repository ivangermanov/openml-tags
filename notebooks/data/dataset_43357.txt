Context: Infrastructure as Code (IaC) is a DevOps strategy that allows management and provisioning of infrastructure through the definition of machine-readable files and automation around them, rather than physical hardware configuration or interactive configuration tools. Although IaC represents an ever-increasing widely adopted practice nowadays, still little is known concerning how to best maintain, speedily evolve, and continuously improve the code behind the IaC strategy in a measurable fashion.

On the other hand, source code measurements are often computed and analyzed to evaluate the different quality aspects of the software developed. In particular, Infrastructure as Code is simply "code", as such it is prone to defects as any other programming languages. This dataset targets the YAML-based Ansible language to devise defects prediction approaches for IaC based on Machine Learning.

Content: The dataset contains metrics extracted from open-source GitHub repositories based on the Ansible language that satisfied the following criteria: The repository has at least one push event to its master branch in the last six months; The repository has at least two releases; At least eleven of the files in the repository are IaC scripts; The repository has at least two core contributors; The repository has evidence of continuous integration practice, such as the presence of a Travis YAML file; The repository has a comments ratio of at least point two; The repository has commit frequency of at least two per month on average; The repository has an issue frequency of at least point zero two three events per month on average; The repository has evidence of a license, such as the presence of a License MD file; The repository has at least one hundred ninety source lines of code.

Metrics are grouped into three categories: IaC-oriented metrics of structural properties derived from the source code of infrastructure scripts; Delta metrics that capture the amount of change in a file between two successive releases, collected for each IaC-oriented metric; Process metrics that capture aspects of the development process rather than aspects about the code itself.

Description of the process metrics in this dataset can be found elsewhere.

Acknowledgements: Thanks to the open-source community.

Inspiration: What source code properties and properties about the development process are good predictors of defects in Infrastructure as Code scripts?

Features: additions, average additions, maximum additions, average play size, average task size, change set average, change set maximum, code churn average, code churn count, code churn maximum, commit, commits count, committed at, contributors count, deletions, average deletions, maximum deletions, failure prone, file path, highest contributor experience, hunks median, lines blank, lines code, lines comment, minor contributors count, number of authorized key, number of block error handling, number of blocks, number of commands, number of conditions, number of decisions, number of deprecated keywords, number of deprecated modules, number of distinct modules, number of external modules, number of fact modules, number of file exists, number of file mode, number of file modules, number of filters, number of ignore errors, number of import playbook, number of import role, number of import tasks, number of include, number of include role, number of include tasks, number of include vars, number of keys, number of lookups, number of loops, number of math operations, number of names with vars, number of parameters, number of paths, number of plays, number of prompts, number of regex, number of roles, number of suspicious comments, number of tasks, number of tokens, number of unique names, number of uri, number of vars, text entropy.

Keywords: Infrastructure as Code, DevOps, Machine Learning, Ansible, YAML, GitHub, Open-Source, Defect Prediction.