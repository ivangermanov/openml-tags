Subsampling of the dataset KC One with Seed equals Two, Maximum Number of Rows equals Two Thousand, Maximum Number of Columns equals One Hundred, Maximum Number of Classes equals Ten, and Stratification set to True.

Generated with the following source code:

def subsample(self, seed, maximum number of rows, maximum number of columns, maximum number of classes, stratified) -> Dataset:
    random number generator = numpy random default random generator(seed)
    x = self x
    y = self y
    
    Uniformly sample classes equals y unique values
    if length of unique classes is greater than maximum number of classes:
        value counts of y = y value counts
        selected classes = random number generator choice(unique classes, size equals maximum number of classes, replace equals False, probability equals value counts divided by sum of value counts)
        
        select the indices where one of these classes is present
        indices = y index where y is in selected classes
        x = x iloc indices
        y = y iloc indices
        
    Uniformly sample columns if required
    if length of x columns is greater than maximum number of columns:
        column indices = random number generator choice(list of range of length of x columns), size equals maximum number of columns, replace equals False)
        sorted column indices = sorted(column indices)
        selected columns = list of x columns at sorted column indices
        x = x selected columns
    else:
        sorted column indices = list of range of length of x columns)
        
    if length of x is greater than maximum number of rows:
        stratify accordingly
        target name = y name
        data = pandas concatenate of x and y along columns
        _, subset = train test split of data, test size equals maximum number of rows, stratify equals data target name, shuffle equals True, random state equals seed)
        x = subset drop target name along columns
        y = subset target name
        
    we need to convert categorical columns to string for OpenML
    categorical mask = list of self categorical mask at i for i in sorted column indices
    columns = list of x columns
    
    return Dataset(
        dataset equals self dataset,
        x equals x,
        y equals y,
        categorical mask equals categorical mask,
        columns equals columns
    )

Features: location, variable g, expected value g, inverse variance g, node count, vertex degree, local clustering coefficient, degree centrality, information centrality, betweenness centrality, transitivity, local order code, local order comment, local order blank, local order code and comment, unique operators, unique operands, total operators, total operands, branch count, defects

Keywords: Machine Learning, Mathematics, Subsampling, Dataset, Stratification, Feature Selection